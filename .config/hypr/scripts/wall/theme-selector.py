#!/bin/python3

import os, subprocess, json

default_themes_dir=os.path.expanduser("~/.config/wal-colorschemes")
user_themes_dir=os.path.expanduser("~/.config/wal/colorschemes/dark")
dark_default_themes_dir = os.path.join(default_themes_dir, "dark")
light_default_themes_dir = os.path.join(default_themes_dir, "light")


dark_themes = os.listdir(dark_default_themes_dir)
light_themes = os.listdir(light_default_themes_dir)
user_themes = os.listdir(user_themes_dir)
random_themes = ["random",  "random_dark","random_light"]


def parse_theme(theme:str,dir:str,message="",name=None):
    if name is None:
        name = theme.replace(".json",'')
    colors = open(f'{dir}/{theme}', 'r')
    colors_data = json.load(colors)["colors"]
    color0 = colors_data[f"color{0}"]
    output = ""
    for i in range(8):
        background_color= colors_data[f"color{i}"]
        output += f"<span background='{background_color}' foreground='{color0}'> {i} </span>"
    return f"{message} {name}\n{output}"

def write_to_rofi(input:str):
    rofi_process.stdin.write(str.encode(input+'\x0f'))

rofi_process = subprocess.Popen(["rofi","-sep","\x0f","-dmenu","-format","i","-i","-markup-rows","-mesg","Type theme name:","-window-title","Ó¶Å", "-eh","2"],
                 stdin=subprocess.PIPE, stdout=subprocess.PIPE, stderr=subprocess.PIPE)

current_theme_name = open(os.path.expanduser("~/.cache/theme_name")).read()
pywal_cache_dir = os.path.expanduser("~/.cache/wal/")
if os.path.exists(pywal_cache_dir):
    name=current_theme_name
    if len(name) == 0:
        name="(Generated by pywal)"
    write_to_rofi(parse_theme(theme="colors.json",dir=pywal_cache_dir,message="Current:",name=name))

for theme in random_themes:
    write_to_rofi(f"<span>{theme}</span>")
for theme in user_themes:
    write_to_rofi(parse_theme(theme, dir=user_themes_dir,message="User:"))
for theme in dark_themes:
    write_to_rofi(parse_theme(theme, dir=dark_default_themes_dir, message="Dark:"))
for (i, theme) in enumerate( light_themes ):
    write_to_rofi(parse_theme(theme, dir=light_default_themes_dir,message="Light:"))
    light_themes[i]+=" -l"

try:
    rofi_select_index = int(bytes.decode(rofi_process.stdout.read()))
except ValueError as e:
    rofi_select_index = -1

if rofi_select_index >= 0:
    theme=([current_theme_name]+random_themes+user_themes+dark_themes+light_themes)[rofi_select_index]
    print(theme.replace(".json",""), end="")
